== Прохождение запроса ==
{{Meta автор=из официальной документации, переводчик=Proger_XP, id переводчика=2, обновление=14.07.2013}}
{{Meta оригинал=doc4:lifecycle}}

{{TOC}}

== Введение ==
В Laravel, жизненный цикл запроса весьма прост. Запрос поступает в ваше приложение, где он направляется к определённому ((quick#маршрут+))у или ((controllers контроллеру)). Полученный результат отправляется обратно к клиенту и отображается в его браузере. Иногда вам может потребоваться сделать какие-то действия перед или после вызова маршрута. Для этого есть несколько путей, два из которых - старт-файлы и события.

== Старт-файлы ==
Файлы запуска, или //старт-файлы// вашего приложения хранятся в папке %%(t)app/start%%. По умолчанию создано три таких файла: %%(t)global.php%%, %%(t)local.php%% и %%(t)artisan.php%%. Для информации об %%(t)artisan.php%% см. ((artisan соответствующий раздел)).

Файл **global.php** изначально содержит несколько начальных вызовов, таких как регистрация ((errors журнала)) и подключение %%(t)app/filters.php%%. Однако вы можете добавить сюда всё, что вам нужно. Этот файл автоматически выполняется при //каждом// запросе вне зависимости от ((configuration#сред+а))ы, в которой выполняется ваше приложение.

Файл **local.php** вызывается только, когда приложение работает в среде %%(t)local%%. Больше информации о средах можно найти в ((configuration разделе о настройках)).

Конечно, если у вас определены другие среды, кроме %%(t)local%%, вы можете создать старт-файлы для любой из них. Они будут автоматически загружаться, когда приложение работает в соответствующей среде.

== События ==
Вы также можете делать пред- или пост-обработку запросов регистрируя обработчики для событий %%(t)before%%, %%(t)after%%, %%(t)close%%, %%(t)finish%% и %%(t)shutdown%%.

**Регистрация обработчиков событий:**
%%(php)
  App::before(function () {
    //
  });

  App::after(function ($request, $response) {
    //
  });
%%

Эти обработчики будут запущены соответственно до и после каждого вызова в вашем приложении.